syntax = "proto3";

// Allows to use `exonum.PublicKey` structure already described in `exonum`
// library.
import "exonum/crypto/types.proto";

// Wallet structure used to persist data within the service.
message Model {
  uint32 version = 1;
  uint32 model_size = 2;
  repeated float weights = 3;

  // Number of transactions related to the model.
  uint64 history_len = 4;
  // `Hash` of the Merkelized list of the transactions
  // related to the wallet.
  exonum.crypto.Hash history_hash = 5;
}

// Transaction type for creating a new wallet.
message TxCreateModel {
  // UTF-8 string with the owner's name.
  string version = 1;
  uint32 model_size = 2;
  repeated float weights = 3;
}

// Transaction type for transferring tokens between two wallets.
message TxUpdateModel {
  // Public key of the receiver.
  uint32 version = 1;
  // Number of tokens to transfer from the sender's account to the receiver's
  // account.
  repeated float gradients = 2;
  // Auxiliary number to guarantee non-idempotence of transactions.
  uint64 seed = 3;
}
